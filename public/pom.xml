<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <name>MTT Test</name>
    <artifactId>public</artifactId>
    <packaging>war</packaging>

    <parent>
        <artifactId>MTT</artifactId>
        <groupId>MTT</groupId>
        <version>1.0</version>
    </parent>

    <properties>
        <build.date>${maven.build.timestamp}</build.date>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Build-Date>${build.date}</Build-Date>
                            <Project-Version>${project.version}</Project-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <!--Start up the Application as part of the integration Tests using a H2 database on port 8181-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <configuration>
                            <fork>true</fork>
                            <useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
                            <port>8181</port>
                            <path>/</path>
                            <warDirectory>${project.build.directory}/${project.build.finalName}</warDirectory>
                            <systemProperties>
                                <mtt.jdbc.driver>org.h2.Driver</mtt.jdbc.driver>
                                <mtt.jdbc.url>jdbc:h2:~/.mtt/db/mtt;AUTO_SERVER=TRUE;MODE=MySQL</mtt.jdbc.url>
                                <mtt.jdbc.username>mtt</mtt.jdbc.username>
                                <mtt.jdbc.password>mtt</mtt.jdbc.password>
                                <!-- Important that emails are sent synchronously so we can capture in tests -->
                                <mtt.emailSender.synchronous>true</mtt.emailSender.synchronous>
                                <!--Set to 2500, as we start up Wiser to mock an SMTP server, runs on same port-->
                                <mtt.mail.smtp.port>2500</mtt.mail.smtp.port>
                            </systemProperties>
                        </configuration>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run-war</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

<!--NOTE: BELOW IS CARGO...SIMILAR TO TOMCAT-MAVEN-PLUGIN-->

            <!--<plugin>-->
                <!--<groupId>org.codehaus.cargo</groupId>-->
                <!--<artifactId>cargo-maven2-plugin</artifactId>-->
                <!--<version>1.1.1</version>-->
                <!--<configuration>-->
                    <!--<container>-->
                        <!--<containerId>tomcat6x</containerId>-->
                        <!--<zipUrlInstaller>-->
                            <!--<url>-->
                                <!--http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.32/bin/apache-tomcat-6.0.32.zip-->
                            <!--</url>-->
                        <!--</zipUrlInstaller>-->
                        <!--<systemProperties>-->
                                <!--<mtt.jdbc.driver>org.h2.Driver</mtt.jdbc.driver>-->
                                <!--<mtt.jdbc.url>jdbc:h2:~/.mtt/db/mtt;AUTO_SERVER=TRUE;MODE=MySQL</mtt.jdbc.url>-->
                                <!--<mtt.jdbc.username>mtt</mtt.jdbc.username>-->
                                <!--<mtt.jdbc.password>mtt</mtt.jdbc.password>-->
                                <!--&lt;!&ndash; Important that emails are sent synchronously so we can capture in tests &ndash;&gt;-->
                                <!--<mtt.emailSender.synchronous>true</mtt.emailSender.synchronous>-->
                                <!--&lt;!&ndash;Set to 2500, as we start up Wiser to mock an SMTP server, runs on same port&ndash;&gt;-->
                                <!--<mtt.mail.smtp.port>2500</mtt.mail.smtp.port>-->
                        <!--</systemProperties>-->
                    <!--</container>-->
                    <!--<configuration>-->
                        <!--<properties>-->
                            <!--<cargo.servlet.port>8181</cargo.servlet.port>-->
                            <!--<cargo.tomcat.ajp.port>8012</cargo.tomcat.ajp.port>-->
                        <!--</properties>-->
                    <!--</configuration>-->
                <!--</configuration>-->
            <!--</plugin>-->
        </plugins>

        <finalName>ROOT-${project.version}</finalName>
    </build>

    <!--The Below ensures that this application is only fired up when -Dgumtree.test.acceptance=true-->
    <!--<profiles>-->
        <!--<profile>-->
            <!--<id>acceptance-enabled</id>-->
            <!--<activation>-->
                <!--<property>-->
                    <!--<name>gumtree.test.acceptance</name>-->
                    <!--<value>true</value>-->
                <!--</property>-->
            <!--</activation>-->
            <!--<build>-->
                <!--<plugins>-->
                    <!--<plugin>-->
                        <!--<groupId>org.codehaus.mojo</groupId>-->
                        <!--<artifactId>tomcat-maven-plugin</artifactId>-->
                        <!--<version>1.1</version>-->
                        <!--<executions>-->
                            <!--<execution>-->
                                <!--<configuration>-->
                                    <!--<fork>true</fork>-->
                                    <!--<useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>-->
                                    <!--<port>8181</port>-->
                                    <!--<path>/</path>-->
                                    <!--<warDirectory>${project.build.directory}/${project.build.finalName}</warDirectory>-->
                                    <!--<systemProperties>-->
                                        <!--<mtt.jdbc.driver>org.h2.Driver</mtt.jdbc.driver>-->
                                        <!--<mtt.jdbc.url>jdbc:h2:~/.mtt/db/mtt;AUTO_SERVER=TRUE;MODE=MySQL</mtt.jdbc.url>-->
                                        <!--<mtt.jdbc.username>mtt</mtt.jdbc.username>-->
                                        <!--<mtt.jdbc.password>mtt</mtt.jdbc.password>-->
                                        <!--&lt;!&ndash; Important that emails are sent synchronously so we can capture in tests &ndash;&gt;-->
                                        <!--<mtt.emailSender.synchronous>true</mtt.emailSender.synchronous>-->
                                        <!--&lt;!&ndash;Set to 2500, as we start up Wiser to mock an SMTP server, runs on same port&ndash;&gt;-->
                                        <!--<mtt.mail.smtp.port>2500</mtt.mail.smtp.port>-->
                                    <!--</systemProperties>-->
                                <!--</configuration>-->
                                <!--<phase>pre-integration-test</phase>-->
                                <!--<goals>-->
                                    <!--<goal>run-war</goal>-->
                                <!--</goals>-->
                            <!--</execution>-->
                        <!--</executions>-->
                    <!--</plugin>-->
                <!--</plugins>-->
            <!--</build>-->
        <!--</profile>-->
    <!--</profiles>-->


    <dependencies>
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-extras</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-jsp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-el</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-asm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>core</artifactId>
        </dependency>
        <dependency>
            <groupId>net.jawr</groupId>
            <artifactId>jawr</artifactId>
        </dependency>
        <dependency>
            <groupId>net.jawr</groupId>
            <artifactId>jawr-bundle-processor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-xc</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.googlecode.ehcache-spring-annotations</groupId>
            <artifactId>ehcache-spring-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.mtt.testapi</groupId>
            <artifactId>client</artifactId>
        </dependency>
    </dependencies>

</project>